- name : create 3 containers
  community.docker.docker_container:
    name: "{{ item }}"
    image: 533567530972.dkr.ecr.us-east-1.amazonaws.com/runner
    state: started
    recreate: true
    pull: true
    restart_policy: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    env:
      NAME: "{{ item }}"
      TOKEN: "BGPMM4OTQGGJ45GC6KR3EM3I2FIEW"
      ORG: "https://github.com/DevOpsProjectsOrganization"
  loop:
    - runner1
    - runner2
    - runner3
  register : out
  ignore_errors : yes
  become: yes
  become_user: github-runner

- name : Run from scratch
  when:  out.failed is defined
  block: 
    - name : Install docker repo file
      ansible.builtin.get_url:
        url: https://download.docker.com/linux/rhel/docker-ce.repo
        dest: /etc/yum.repos.d/docker.repo

    - name : download docker
      ansible.builtin.dnf:
        name : docker-ce
        state: installed

    - name: Copy Docker service file
      ansible.builtin.template:
        src: docker.service.j2
        dest: /etc/systemd/system/docker.service
        owner: root
        group: root
        # name: docker.service
        # dest: /etc/systemd/system/multi-user.target.wants/docker.service

    - name: Start Docker
      ansible.builtin.systemd_service:
        name: docker
        state: restarted
        enabled: yes
        daemon-reload: yes

    - name: Add github runner user
      ansible.builtin.user:
        name: github-runner
        home: /github-runner
        groups: docker
        append: yes

    - name :  login to ECR
      ansible.builtin.shell : |
        /usr/local/bin/aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 533567530972.dkr.ecr.us-east-1.amazonaws.com
      become: yes
      become_user: github-runner
      
    - name: Runner container
      community.docker.docker_container:
        name: "{{ item }}"
        image: 533567530972.dkr.ecr.us-east-1.amazonaws.com/runner
        state: started
        recreate: true
        pull: true
        restart_policy: always
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
        env:
          NAME: "{{ item }}"
          TOKEN: "BGPMM4OTQGGJ45GC6KR3EM3I2FIEW"
          ORG: "https://github.com/DevOpsProjectsOrganization"
      loop:
        - runner1
        - runner2
        - runner3
      become: yes
      become_user: github-runner

## All the below will be installed inside the container using docker image
#- name : download and install github runner
#   ansible.builtin.unarchive:
#     src: https://github.com/actions/runner/releases/download/v2.328.0/actions-runner-linux-x64-2.328.0.tar.gz
#     dest: /github-runner
#     remote_src: yes
#     owner : github-runner
#     group : github-runner
# - name : Install libicu
#   ansible.builtin.dnf:
#     name: libicu
#     state: installed

# - name: configure runner
#   ansible.builtin.shell: ./config.sh --url https://github.com/DevOpsProjectsOrganization --token {{token}} --runnergroup Default --name github-runner --labels self-hosted --work _work --replace 
#   args:
#     chdir: /github-runner
#   become_user: github-runner
#   vars:     
#     token : "BGPMM4MZZBACRZ53NCSOXITIY7NES"
#   ignore_errors: yes

# - name : Copy the service file
#   ansible.builtin.template:
#     src: github-runner.service
#     dest : /etc/systemd/system/github-runner.service

# - name: Download Terraform Repo
#   ansible.builtin.get_url:
#     url: https://rpm.releases.hashicorp.com/RHEL/hashicorp.repo
#     dest: /etc/yum.repos.d/hashicorp.repo

# - name: Install Terraform
#   ansible.builtin.dnf:
#     name: terraform
#     state: installed

# - name : start the systemd service
#   ansible.builtin.systemd_service:
#     name: github-runner
#     state: restarted
#     enabled: yes

# - name : install nodejs
#   ansible.builtin.shell: |
#     dnf module disable nodejs -y
#     dnf module enable nodejs:22 -y

# - name : install app packages
#   ansible.builtin.dnf:
#     name:
#       - nodejs
#       - npm
#       - maven

# - name : installing helm
#   ansible.builtin.shell : |
#    curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
#   args:
#     executable: /bin/bash
#   environment:
#     PATH: "{{ ansible_env.PATH }}:/usr/local/bin"